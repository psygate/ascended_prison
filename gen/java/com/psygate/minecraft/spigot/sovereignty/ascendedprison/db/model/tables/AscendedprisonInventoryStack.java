/**
 * This class is generated by jOOQ
 */
package com.psygate.minecraft.spigot.sovereignty.ascendedprison.db.model.tables;


import com.psygate.minecraft.spigot.sovereignty.ascendedprison.db.model.Keys;
import com.psygate.minecraft.spigot.sovereignty.ascendedprison.db.model.Nucleus;
import com.psygate.minecraft.spigot.sovereignty.ascendedprison.db.model.tables.records.AscendedprisonInventoryStackRecord;
import com.psygate.minecraft.spigot.sovereignty.nucleus.sql.util.UUIDByteConverter;

import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AscendedprisonInventoryStack extends TableImpl<AscendedprisonInventoryStackRecord> {

	private static final long serialVersionUID = -1075722181;

	/**
	 * The reference instance of <code>nucleus.ascendedprison_inventory_stack</code>
	 */
	public static final AscendedprisonInventoryStack ASCENDEDPRISON_INVENTORY_STACK = new AscendedprisonInventoryStack();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<AscendedprisonInventoryStackRecord> getRecordType() {
		return AscendedprisonInventoryStackRecord.class;
	}

	/**
	 * The column <code>nucleus.ascendedprison_inventory_stack.puuid</code>.
	 */
	public final TableField<AscendedprisonInventoryStackRecord, UUID> PUUID = createField("puuid", org.jooq.impl.SQLDataType.BINARY.length(16).nullable(false), this, "", new UUIDByteConverter());

	/**
	 * The column <code>nucleus.ascendedprison_inventory_stack.world_uuid</code>.
	 */
	public final TableField<AscendedprisonInventoryStackRecord, UUID> WORLD_UUID = createField("world_uuid", org.jooq.impl.SQLDataType.BINARY.length(16).nullable(false), this, "", new UUIDByteConverter());

	/**
	 * The column <code>nucleus.ascendedprison_inventory_stack.type</code>.
	 */
	public final TableField<AscendedprisonInventoryStackRecord, String> TYPE = createField("type", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

	/**
	 * The column <code>nucleus.ascendedprison_inventory_stack.data</code>.
	 */
	public final TableField<AscendedprisonInventoryStackRecord, Byte> DATA = createField("data", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * The column <code>nucleus.ascendedprison_inventory_stack.damage</code>.
	 */
	public final TableField<AscendedprisonInventoryStackRecord, Short> DAMAGE = createField("damage", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

	/**
	 * The column <code>nucleus.ascendedprison_inventory_stack.slot_id</code>.
	 */
	public final TableField<AscendedprisonInventoryStackRecord, Integer> SLOT_ID = createField("slot_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>nucleus.ascendedprison_inventory_stack.amount</code>.
	 */
	public final TableField<AscendedprisonInventoryStackRecord, Integer> AMOUNT = createField("amount", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>nucleus.ascendedprison_inventory_stack.custom_name</code>.
	 */
	public final TableField<AscendedprisonInventoryStackRecord, String> CUSTOM_NAME = createField("custom_name", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * Create a <code>nucleus.ascendedprison_inventory_stack</code> table reference
	 */
	public AscendedprisonInventoryStack() {
		this("ascendedprison_inventory_stack", null);
	}

	/**
	 * Create an aliased <code>nucleus.ascendedprison_inventory_stack</code> table reference
	 */
	public AscendedprisonInventoryStack(String alias) {
		this(alias, ASCENDEDPRISON_INVENTORY_STACK);
	}

	private AscendedprisonInventoryStack(String alias, Table<AscendedprisonInventoryStackRecord> aliased) {
		this(alias, aliased, null);
	}

	private AscendedprisonInventoryStack(String alias, Table<AscendedprisonInventoryStackRecord> aliased, Field<?>[] parameters) {
		super(alias, Nucleus.NUCLEUS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<AscendedprisonInventoryStackRecord> getPrimaryKey() {
		return Keys.KEY_ASCENDEDPRISON_INVENTORY_STACK_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<AscendedprisonInventoryStackRecord>> getKeys() {
		return Arrays.<UniqueKey<AscendedprisonInventoryStackRecord>>asList(Keys.KEY_ASCENDEDPRISON_INVENTORY_STACK_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AscendedprisonInventoryStack as(String alias) {
		return new AscendedprisonInventoryStack(alias, this);
	}

	/**
	 * Rename this table
	 */
	public AscendedprisonInventoryStack rename(String name) {
		return new AscendedprisonInventoryStack(name, null);
	}
}
