/**
 * This class is generated by jOOQ
 */
package com.psygate.minecraft.spigot.sovereignty.ascendedprison.db.model.tables.records;


import com.psygate.minecraft.spigot.sovereignty.ascendedprison.db.model.tables.AscendedprisonFeedingCycles;
import com.psygate.minecraft.spigot.sovereignty.ascendedprison.db.model.tables.interfaces.IAscendedprisonFeedingCycles;
import com.psygate.minecraft.spigot.sovereignty.ascendedprison.prison.PrisonID;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AscendedprisonFeedingCyclesRecord extends UpdatableRecordImpl<AscendedprisonFeedingCyclesRecord> implements Record3<Timestamp, PrisonID, Integer>, IAscendedprisonFeedingCycles {

	private static final long serialVersionUID = -1788748116;

	/**
	 * Setter for <code>nucleus.ascendedprison_feeding_cycles.cycle_time</code>.
	 */
	public void setCycleTime(Timestamp value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>nucleus.ascendedprison_feeding_cycles.cycle_time</code>.
	 */
	@Override
	public Timestamp getCycleTime() {
		return (Timestamp) getValue(0);
	}

	/**
	 * Setter for <code>nucleus.ascendedprison_feeding_cycles.prisonid</code>.
	 */
	public void setPrisonid(PrisonID value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>nucleus.ascendedprison_feeding_cycles.prisonid</code>.
	 */
	@Override
	public PrisonID getPrisonid() {
		return (PrisonID) getValue(1);
	}

	/**
	 * Setter for <code>nucleus.ascendedprison_feeding_cycles.cost</code>.
	 */
	public void setCost(Integer value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>nucleus.ascendedprison_feeding_cycles.cost</code>.
	 */
	@Override
	public Integer getCost() {
		return (Integer) getValue(2);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Timestamp> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record3 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Timestamp, PrisonID, Integer> fieldsRow() {
		return (Row3) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Timestamp, PrisonID, Integer> valuesRow() {
		return (Row3) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field1() {
		return AscendedprisonFeedingCycles.ASCENDEDPRISON_FEEDING_CYCLES.CYCLE_TIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<PrisonID> field2() {
		return AscendedprisonFeedingCycles.ASCENDEDPRISON_FEEDING_CYCLES.PRISONID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field3() {
		return AscendedprisonFeedingCycles.ASCENDEDPRISON_FEEDING_CYCLES.COST;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value1() {
		return getCycleTime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PrisonID value2() {
		return getPrisonid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value3() {
		return getCost();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AscendedprisonFeedingCyclesRecord value1(Timestamp value) {
		setCycleTime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AscendedprisonFeedingCyclesRecord value2(PrisonID value) {
		setPrisonid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AscendedprisonFeedingCyclesRecord value3(Integer value) {
		setCost(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AscendedprisonFeedingCyclesRecord values(Timestamp value1, PrisonID value2, Integer value3) {
		value1(value1);
		value2(value2);
		value3(value3);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached AscendedprisonFeedingCyclesRecord
	 */
	public AscendedprisonFeedingCyclesRecord() {
		super(AscendedprisonFeedingCycles.ASCENDEDPRISON_FEEDING_CYCLES);
	}

	/**
	 * Create a detached, initialised AscendedprisonFeedingCyclesRecord
	 */
	public AscendedprisonFeedingCyclesRecord(Timestamp cycleTime, PrisonID prisonid, Integer cost) {
		super(AscendedprisonFeedingCycles.ASCENDEDPRISON_FEEDING_CYCLES);

		setValue(0, cycleTime);
		setValue(1, prisonid);
		setValue(2, cost);
	}
}
