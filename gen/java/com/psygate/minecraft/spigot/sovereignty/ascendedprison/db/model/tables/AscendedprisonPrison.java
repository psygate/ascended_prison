/**
 * This class is generated by jOOQ
 */
package com.psygate.minecraft.spigot.sovereignty.ascendedprison.db.model.tables;


import com.psygate.minecraft.spigot.sovereignty.ascendedprison.db.model.Keys;
import com.psygate.minecraft.spigot.sovereignty.ascendedprison.db.model.Nucleus;
import com.psygate.minecraft.spigot.sovereignty.ascendedprison.db.model.tables.records.AscendedprisonPrisonRecord;
import com.psygate.minecraft.spigot.sovereignty.ascendedprison.prison.PrisonID;
import com.psygate.minecraft.spigot.sovereignty.ascendedprison.util.sql.PrisonIDConverter;
import com.psygate.minecraft.spigot.sovereignty.nucleus.sql.util.ByteBooleanConverter;
import com.psygate.minecraft.spigot.sovereignty.nucleus.sql.util.UUIDByteConverter;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AscendedprisonPrison extends TableImpl<AscendedprisonPrisonRecord> {

	private static final long serialVersionUID = -331539290;

	/**
	 * The reference instance of <code>nucleus.ascendedprison_prison</code>
	 */
	public static final AscendedprisonPrison ASCENDEDPRISON_PRISON = new AscendedprisonPrison();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<AscendedprisonPrisonRecord> getRecordType() {
		return AscendedprisonPrisonRecord.class;
	}

	/**
	 * The column <code>nucleus.ascendedprison_prison.prisonid</code>.
	 */
	public final TableField<AscendedprisonPrisonRecord, PrisonID> PRISONID = createField("prisonid", org.jooq.impl.SQLDataType.BINARY.length(16).nullable(false), this, "", new PrisonIDConverter());

	/**
	 * The column <code>nucleus.ascendedprison_prison.prisoner_uuid</code>.
	 */
	public final TableField<AscendedprisonPrisonRecord, UUID> PRISONER_UUID = createField("prisoner_uuid", org.jooq.impl.SQLDataType.BINARY.length(16).nullable(false), this, "", new UUIDByteConverter());

	/**
	 * The column <code>nucleus.ascendedprison_prison.imprisoner_uuid</code>.
	 */
	public final TableField<AscendedprisonPrisonRecord, UUID> IMPRISONER_UUID = createField("imprisoner_uuid", org.jooq.impl.SQLDataType.BINARY.length(16).nullable(false), this, "", new UUIDByteConverter());

	/**
	 * The column <code>nucleus.ascendedprison_prison.imprisonTime</code>.
	 */
	public final TableField<AscendedprisonPrisonRecord, Timestamp> IMPRISONTIME = createField("imprisonTime", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>nucleus.ascendedprison_prison.summoned_state</code>.
	 */
	public final TableField<AscendedprisonPrisonRecord, Boolean> SUMMONED_STATE = createField("summoned_state", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "", new ByteBooleanConverter());

	/**
	 * The column <code>nucleus.ascendedprison_prison.prison_location_type</code>.
	 */
	public final TableField<AscendedprisonPrisonRecord, String> PRISON_LOCATION_TYPE = createField("prison_location_type", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>nucleus.ascendedprison_prison.leash_range</code>.
	 */
	public final TableField<AscendedprisonPrisonRecord, Double> LEASH_RANGE = createField("leash_range", org.jooq.impl.SQLDataType.DOUBLE.nullable(false), this, "");

	/**
	 * The column <code>nucleus.ascendedprison_prison.x</code>.
	 */
	public final TableField<AscendedprisonPrisonRecord, Double> X = createField("x", org.jooq.impl.SQLDataType.DOUBLE.nullable(false), this, "");

	/**
	 * The column <code>nucleus.ascendedprison_prison.y</code>.
	 */
	public final TableField<AscendedprisonPrisonRecord, Double> Y = createField("y", org.jooq.impl.SQLDataType.DOUBLE.nullable(false), this, "");

	/**
	 * The column <code>nucleus.ascendedprison_prison.z</code>.
	 */
	public final TableField<AscendedprisonPrisonRecord, Double> Z = createField("z", org.jooq.impl.SQLDataType.DOUBLE.nullable(false), this, "");

	/**
	 * The column <code>nucleus.ascendedprison_prison.world_uuid</code>.
	 */
	public final TableField<AscendedprisonPrisonRecord, UUID> WORLD_UUID = createField("world_uuid", org.jooq.impl.SQLDataType.BINARY.length(16).nullable(false), this, "", new UUIDByteConverter());

	/**
	 * The column <code>nucleus.ascendedprison_prison.location_uuid</code>.
	 */
	public final TableField<AscendedprisonPrisonRecord, UUID> LOCATION_UUID = createField("location_uuid", org.jooq.impl.SQLDataType.BINARY.length(16), this, "", new UUIDByteConverter());

	/**
	 * Create a <code>nucleus.ascendedprison_prison</code> table reference
	 */
	public AscendedprisonPrison() {
		this("ascendedprison_prison", null);
	}

	/**
	 * Create an aliased <code>nucleus.ascendedprison_prison</code> table reference
	 */
	public AscendedprisonPrison(String alias) {
		this(alias, ASCENDEDPRISON_PRISON);
	}

	private AscendedprisonPrison(String alias, Table<AscendedprisonPrisonRecord> aliased) {
		this(alias, aliased, null);
	}

	private AscendedprisonPrison(String alias, Table<AscendedprisonPrisonRecord> aliased, Field<?>[] parameters) {
		super(alias, Nucleus.NUCLEUS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<AscendedprisonPrisonRecord> getPrimaryKey() {
		return Keys.KEY_ASCENDEDPRISON_PRISON_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<AscendedprisonPrisonRecord>> getKeys() {
		return Arrays.<UniqueKey<AscendedprisonPrisonRecord>>asList(Keys.KEY_ASCENDEDPRISON_PRISON_PRISONID, Keys.KEY_ASCENDEDPRISON_PRISON_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AscendedprisonPrison as(String alias) {
		return new AscendedprisonPrison(alias, this);
	}

	/**
	 * Rename this table
	 */
	public AscendedprisonPrison rename(String name) {
		return new AscendedprisonPrison(name, null);
	}
}
